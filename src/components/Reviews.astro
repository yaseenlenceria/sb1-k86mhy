---
const reviews = [
  {
    name: "Sarah Johnson",
    rating: 5,
    text: "Best TikTok downloader I've ever used! Super fast and reliable.",
    date: "2024-01-15"
  },
  {
    name: "Michael Chen",
    rating: 5,
    text: "Love how it downloads videos without watermarks. Great service!",
    date: "2024-01-20"
  },
  {
    name: "Emma Davis",
    rating: 4,
    text: "Very easy to use. The MP3 conversion feature is fantastic.",
    date: "2024-02-01"
  }
];

// Calculate aggregate rating
const totalRatings = reviews.reduce((acc, review) => acc + review.rating, 0);
const averageRating = (totalRatings / reviews.length).toFixed(1);
const totalReviews = reviews.length;

const schema = {
  "@context": "https://schema.org",
  "@type": "SoftwareApplication",
  "name": "SaveDownloadTT",
  "applicationCategory": "UtilitiesApplication",
  "operatingSystem": "Any",
  "offers": {
    "@type": "Offer",
    "price": "0",
    "priceCurrency": "USD"
  },
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": averageRating,
    "bestRating": "5",
    "worstRating": "1",
    "ratingCount": totalReviews,
    "reviewCount": totalReviews
  },
  "review": reviews.map(review => ({
    "@type": "Review",
    "reviewRating": {
      "@type": "Rating",
      "ratingValue": review.rating,
      "bestRating": "5",
      "worstRating": "1"
    },
    "author": {
      "@type": "Person",
      "name": review.name
    },
    "datePublished": review.date,
    "reviewBody": review.text
  }))
};
---

<section class="py-20 px-4 bg-black/20">
  <div class="max-w-6xl mx-auto">
    <script type="application/ld+json" set:html={JSON.stringify(schema)} />
    
    <h2 class="text-4xl font-bold text-center mb-12" data-aos="fade-up">
      What Our Users Say
    </h2>
    
    <div class="grid md:grid-cols-3 gap-8">
      {reviews.map((review, index) => (
        <div 
          class="p-6 bg-white/5 rounded-xl backdrop-blur-lg"
          data-aos="fade-up"
          data-aos-delay={index * 100}
        >
          <div class="flex items-center mb-4">
            <div class="flex">
              {Array.from({ length: 5 }).map((_, i) => (
                <svg class={`w-5 h-5 ${i < review.rating ? 'text-yellow-400' : 'text-gray-600'}`} fill="currentColor" viewBox="0 0 20 20">
                  <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                </svg>
              ))}
            </div>
          </div>
          <p class="text-gray-300 mb-4">{review.text}</p>
          <div class="flex justify-between items-center text-sm text-gray-400">
            <span>{review.name}</span>
            <span>{new Date(review.date).toLocaleDateString()}</span>
          </div>
        </div>
      ))}
    </div>

    <div class="mt-8 text-center">
      <div class="inline-flex items-center gap-2 bg-white/5 px-4 py-2 rounded-lg">
        <div class="flex">
          {Array.from({ length: 5 }).map((_, i) => (
            <svg class={`w-5 h-5 ${i < Math.round(Number(averageRating)) ? 'text-yellow-400' : 'text-gray-600'}`} fill="currentColor" viewBox="0 0 20 20">
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
            </svg>
          ))}
        </div>
        <span class="text-gray-300">{averageRating} out of 5</span>
        <span class="text-gray-400">({totalReviews} reviews)</span>
      </div>
    </div>
  </div>
</section>